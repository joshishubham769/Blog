package com.blog.Blog.model;

import com.blog.Blog.dto.UserDto;
import jakarta.persistence.*;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import java.time.ZonedDateTime;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.UpdateTimestamp;

@Getter
@Setter
@Entity
@Table(name = "users")
@NoArgsConstructor
public class User {
    @Override
    public String toString() {
        return "User{" +
                "id=" + id +
                ", userName='" + userName + '\'' +
                ", email='" + email + '\'' +
                ", phoneNumber=" + phoneNumber +
                ", isActive=" + isActive +
                '}';
    }

    @Id
    @Column(name = "id")
    @GeneratedValue(strategy = GenerationType.IDENTITY) // auto increment, generated by db
    private Integer id;

    @Column(name = "username")
    private String userName;

    @Column(name = "password")
    private String password;// needs to be encrypted

    @CreationTimestamp
    @Column(name = "createdat")
    private ZonedDateTime createdAt = ZonedDateTime.now();

    @UpdateTimestamp
    @Column(name = "modifiedat")
    private ZonedDateTime modifiedAt = ZonedDateTime.now();

    @Column(name = "email")
    private String email;

    @Column(name = "phonenumber")
    private Long phoneNumber;

    @Column(name = "isactive")
    private Boolean isActive = true;

    public User(UserDto userDto){
        this.userName=userDto.getUserName();
        this.password=userDto.getPassword();
        this.email=userDto.getEmail();
        this.isActive=userDto.isActive();
        this.phoneNumber=userDto.getPhoneNumber();
    }
}
